<script>
    async function callProtectedAPI() {
      const token = localStorage.getItem("token"); // Lấy token từ localStorage
    
      if (!token) {
        document.getElementById("resumeboardss").style.display = "none"; 
        window.location.href = "/"; // Chuyển hướng về trang login
        return;
      }
    
      try {
        const response = await fetch("/api/admin/protectedRoute", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${token}` // Gửi token trong Authorization header
          }
        });
    
        // Nếu API trả về 200 (OK), nghĩa là người dùng có quyền truy cập
        if (response.ok) {
          const result = await response.json();
          document.getElementById("resumeboardss").style.display = "block"; 

        } else if (response.status === 403) {
          alert("You do not have permission to access this page.");
          localStorage.removeItem("token"); // Xóa token
          window.location.href = "/"; // Chuyển hướng về trang login
        } else {
          const result = await response.json();
          console.error(result.message);  
          window.location.href = "/"; // Chuyển hướng về trang login
          alert("An unexpected error occurred.");
        }
      } catch (error) {
        console.error("Error while accessing protected route:", error);
        alert("An error occurred. Please try again later.");
      }
    }
    
    // Chỉ tải nội dung sau khi đã xác nhận quyền truy cập
    document.addEventListener("DOMContentLoaded", callProtectedAPI);
      </script> 

    
<script>
    const token = localStorage.getItem("token"); // Lấy token từ localStorage
    $(document).ready(function () {
    const token = localStorage.getItem("token");

    // Lấy dữ liệu từ API và hiển thị trong bảng
    $.ajax({
        url: '/api/attendance/getresume1foradmin',
        method: 'POST',
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${token}`
        },
        success: function (response) {
            if (response && response.resume && Array.isArray(response.resume)) {
                const data = response.resume;
                data.forEach(resume => {
                    $('#dataTable tbody').append(`
                        <tr>
                            <td>
                                <input type="checkbox" class="select-checkbox" data-id="${resume.id_resume}" data-setting="${resume.setting_resume.id_setting_resume}">
                            </td>
                            <td>${resume.id_resume}</td>
                            <td>${resume.date_start}</td>
                            <td>${resume.date_end}</td>
                            <td>${resume.time_start || 'N/A'}</td>
                            <td>${resume.time_end || 'N/A'}</td>
                            <td>${resume.id_staff}</td>
                            <td>${resume.staff.name || 'N/A'}</td>
                            <td>${resume.staff.manager || 'N/A'}</td>
                            <td>${resume.description || 'N/A'}</td>
                            <td>${resume.setting_resume.name_setting_resume || 'N/A'}</td>
                            <td>
                                <button class="btn btn-success" onclick="confirmApproveAccount('${resume.id_resume}', '${resume.setting_resume.id_setting_resume}')">Duyệt</button>
                                <button class="btn btn-danger" onclick="confirmCancelAccount('${resume.id_resume}')">Từ chối</button>
                            </td>
                        </tr>
                    `);
                });

                // Khởi tạo DataTable
                $('#dataTable').DataTable();
            } else {
                console.error('Phản hồi không hợp lệ:', response);
            }
        },
        error: function (err) {
            console.error('Lỗi khi gọi API:', err);
        }
    });

    // Xử lý tick chọn toàn bộ
    $('#selectAll').on('change', function () {
        const isChecked = $(this).is(':checked');
        $('.select-checkbox').prop('checked', isChecked);
    });

    // Xử lý khi tất cả các checkbox nhỏ đều được chọn/deselect
    $(document).on('change', '.select-checkbox', function () {
        const allCheckboxes = $('.select-checkbox');
        const checkedCheckboxes = $('.select-checkbox:checked');
        $('#selectAll').prop('checked', allCheckboxes.length === checkedCheckboxes.length);
    });

    // Duyệt các mục đã chọn
    $('#approveSelected').on('click', function () {
        handleBulkAction('/api/attendance/approveresumebyadmin', 'Duyệt');
    });

    // Từ chối các mục đã chọn
    $('#rejectSelected').on('click', function () {
        handleBulkAction('/api/attendance/cancelresumebyadmin', 'Từ chối');
    });
});
$(document).ready(function () {
    // Lắng nghe sự kiện change trên các checkbox
    $(document).on('change', '.select-checkbox', function () {
        toggleBulkActionButtons();
    });

    // Lắng nghe sự kiện click trên nút "Chọn hết"
    $('#selectAll').on('click', function () {
        const isChecked = $(this).prop('checked');
        $('.select-checkbox').prop('checked', isChecked); // Tick hoặc bỏ tick tất cả
        toggleBulkActionButtons(); // Cập nhật trạng thái nút hành động
    });

    // Hàm hiển thị/ẩn các nút khi có ít nhất một checkbox được tick
    function toggleBulkActionButtons() {
        const anyChecked = $('.select-checkbox:checked').length > 0;
        if (anyChecked) {
            $('#bulkActionButtons').fadeIn(); // Hiển thị nút với hiệu ứng
        } else {
            $('#bulkActionButtons').fadeOut(); // Ẩn nút với hiệu ứng
        }
    }
});

async function handleBulkAction(apiUrl, actionType) {
    const selectedItems = [];
    $('.select-checkbox:checked').each(function () {
        const id_resume = $(this).data('id');
        const id_setting = $(this).data('setting');
        console.log('Checkbox data:', { id_resume, id_setting });

        if (!id_resume) {
            console.error('ID Resume bị thiếu:', id_resume);
        }
        selectedItems.push({ resumeId: id_resume, id_setting_resume: id_setting });
    });

    if (selectedItems.length === 0) {
        showResultPopup("Thông báo", `Vui lòng chọn ít nhất một mục để ${actionType.toLowerCase()}!`);
        return;
    }
    console.log('Dữ liệu gửi đi:', JSON.stringify(selectedItems));

    // Hiển thị popup xác nhận
    const confirmPopup = document.getElementById("confirmPopup");
    confirmPopup.style.display = "flex";
    const confirmMessage = document.getElementById("titlepopupconfirm");
    confirmMessage.innerText = `Bạn có chắc chắn muốn ${actionType.toLowerCase()} các mục đã chọn không?`;

    const confirmYesButton = document.getElementById("confirmYes");
    const confirmNoButton = document.getElementById("confirmNo");

    confirmYesButton.onclick = async function () {
        closePopup("confirmPopup");

        // Hiển thị loading GIF
        const loadingOverlay = document.getElementById("loadingOverlay");
        loadingOverlay.style.display = "flex";

        try {
            const response = await $.ajax({
                url: apiUrl,
                method: 'POST',
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}`,
                },
                data: JSON.stringify(selectedItems),
            });

            console.log('Kết quả API:', response);
            showResultPopup("Hoàn tất", `Đã ${actionType.toLowerCase()} các mục được chọn.`, function () {
                location.reload();
            });
        } catch (err) {
            console.error(`Lỗi khi thực hiện hành động ${actionType.toLowerCase()}:`, err);
            showResultPopup("Lỗi", `Lỗi khi ${actionType.toLowerCase()}. Vui lòng thử lại.`);
        } finally {
            // Ẩn loading GIF
            loadingOverlay.style.display = "none";
        }
    };

    confirmNoButton.onclick = function () {
        closePopup("confirmPopup");
    };
}

function confirmApproveAccount(resumeId, id_setting_resume) {
  const confirmPopup = document.getElementById("confirmPopup");
  confirmPopup.style.display = "flex";
  const confirmMessage = document.getElementById("titlepopupconfirm");
  confirmMessage.innerText = "Bạn muốn duyệt đơn này không?";

  const confirmYesButton = document.getElementById("confirmYes");
  confirmYesButton.onclick = function () {
    closePopup("confirmPopup");
    const loadingOverlay = document.getElementById("loadingOverlay");
    loadingOverlay.style.display = "flex";
    // Thực hiện duyệt đơn
    $.ajax({
      url: `/api/attendance/approveresumebyadmin`,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      data: JSON.stringify({ resumeId, id_setting_resume }),
      success: function (response) {
        loadingOverlay.style.display = "none";
        showResultPopup("Thành công", "Duyệt đơn thành công.", function () {
          location.reload();
        });
      },
      error: function (err) {
        loadingOverlay.style.display = "none";
        console.error("Error approving account:", err);
        showResultPopup("Lỗi", "Duyệt đơn thất bại.");
      },
    });
  };
}

function confirmCancelAccount(resumeId) {
  const confirmPopup = document.getElementById("confirmPopup");
  confirmPopup.style.display = "flex";
  const confirmMessage = document.getElementById("titlepopupconfirm");
  confirmMessage.innerText = "Bạn muốn không duyệt đơn này không?";

  const confirmYesButton = document.getElementById("confirmYes");
  confirmYesButton.onclick = function () {
    closePopup("confirmPopup");
    const loadingOverlay = document.getElementById("loadingOverlay");
    loadingOverlay.style.display = "flex";
    // Thực hiện hủy duyệt đơn
    $.ajax({
      url: `/api/attendance/cancelresumebyadmin`,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      data: JSON.stringify({ resumeId }),
      success: function (response) {
        loadingOverlay.style.display = "none";
        showResultPopup("Thành công", "Hủy đơn thành công.", function () {
          location.reload();
        });
      },
      error: function (err) {
        loadingOverlay.style.display = "none";
        console.error("Error canceling account:", err);
        showResultPopup("Lỗi", "Hủy đơn thất bại.");
      },
    });
  };
}

</script>

<main class="container-fluid page-body-wrapper" style="margin-top: 4%;display: none;" id="resumeboardss">
  <div id="loadingOverlay" style="display: none !important; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0, 0, 0, 0.5); z-index: 1000; display: flex; justify-content: center; align-items: center;">
    <div class="spinner"></div>
</div>
  
      <div class="content-wrapper">
        <div id="content" style="margin-top: 2%;">

            <!-- Begin Page Content -->
            <div class="container-fluid">

                <!-- Page Heading -->
                <h1 class="h3 mb-2 text-gray-800"> Quản lí đơn</h1>

                <!-- DataTales Example -->
                <div class="card shadow mb-4">
                    <div class="card-header py-3">
                        <h6 class="m-0 font-weight-bold text-primary" id="download_log" style="cursor: pointer;">Danh sách đơn chờ duyệt</h6>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                          <div id="bulkActionButtons" style="display: none; margin-top: 10px;">
                            <button id="approveSelected" class="btn btn-success">Duyệt các mục đã chọn</button>
                            <button id="rejectSelected" class="btn btn-danger">Từ chối các mục đã chọn</button>
                        </div>
                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>                
                                          <input type="checkbox" id="selectAll">
                                          <label for="selectAll">Chọn hết</label>
                                        </th>
                                        <th>Mã đơn</th>
                                        <th>Ngày bắt đầu</th>
                                        <th>Ngày kết thúc</th>
                                        <th>Thời gian bắt đầu</th>
                                        <th>Thời gian kết thúc</th>
                                        <th>Mã nhân viên</th>
                                        <th>Tên nhân viên</th>
                                        <th>Tên quản lí</th>
                                        <th>Mô tả</th>
                                        <th>Loại đơn</th>
                                        <th>Chức năng</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Mã đơn</th>
                                        <th>Ngày bắt đầu</th>
                                        <th>Ngày kết thúc</th>
                                        <th>Thời gian bắt đầu</th>
                                        <th>Thời gian kết thúc</th>
                                        <th>Mã nhân viên</th>
                                        <th>Tên nhân viên</th>
                                        <th>Tên quản lí</th>
                                        <th>Mô tả</th>
                                        <th>Loại đơn</th>
                                        <th>Chức năng</th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    <!-- Dữ liệu sẽ được chèn vào đây từ Ajax -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
      </div>
      <!-- content-wrapper ends -->
</main>

<script src="vendor/jquery.min.js"></script>

<script src="vendor/jquery.easing.min.js"></script>

<script src="js/sb-admin-2.min.js"></script>

<script src="vendor/jquery.dataTables.min.js"></script>
<script src="vendor/dataTables.bootstrap4.min.js"></script>
<script src="js/navigation.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/css/bootstrap-datepicker.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/js/bootstrap-datepicker.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/locales/bootstrap-datepicker.vi.min.js"></script>