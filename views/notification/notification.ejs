<script>
    async function callProtectedAPI() {
      const token = localStorage.getItem("token"); // Lấy token từ localStorage
    
      if (!token) {
        document.getElementById("notificationboardss").style.display = "none"; 
        window.location.href = "/"; // Chuyển hướng về trang login
        return;
      }
    
      try {
        const response = await fetch("/api/admin/protectedRoute", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${token}` // Gửi token trong Authorization header
          }
        });
    
        // Nếu API trả về 200 (OK), nghĩa là người dùng có quyền truy cập
        if (response.ok) {
          const result = await response.json();
          document.getElementById("notificationboardss").style.display = "block"; 

        } else if (response.status === 403) {
          alert("You do not have permission to access this page.");
          localStorage.removeItem("token"); // Xóa token
          window.location.href = "/"; // Chuyển hướng về trang login
        } else {
          const result = await response.json();
          console.error(result.message);  
          window.location.href = "/"; // Chuyển hướng về trang login
          alert("An unexpected error occurred.");
        }
      } catch (error) {
        console.error("Error while accessing protected route:", error);
        alert("An error occurred. Please try again later.");
      }
    }
    
    // Chỉ tải nội dung sau khi đã xác nhận quyền truy cập
    document.addEventListener("DOMContentLoaded", callProtectedAPI);
      </script> 
<style>
  
  .limited-cell {
    max-width: 200px; /* Giới hạn chiều rộng của ô */
    white-space: normal; /* Cho phép xuống dòng */
    word-wrap: break-word; /* Tự động xuống dòng nếu từ quá dài */
    overflow-wrap: break-word; /* Hỗ trợ trình duyệt hiện đại */
  }

</style>
    
<script>
    const token = localStorage.getItem("token"); 
    $(document).ready(function() {

      $.ajax({
        url: '/api/attendance/getallnotification', 
        method: 'GET',
        headers: {
          "Content-Type": "application/json",
          "Authorization": `Bearer ${token}`
        },
        success: function(response) {
          if (response && response.result && Array.isArray(response.result)) {
            const data = response.result;
            data.forEach(result => {
              $('#dataTable tbody').append(`
                <tr style="color:white">
                  <td>${result.id}</td>
                  <td>${result.title}</td>
                  <td>${result.body || 'N/A'}</td> 
                  <td>${result.id_staff || 'N/A'}</td> 
                  <td>${result.employee_name || 'N/A'}</td> 
                  <td>${result.created_at ? new Date(result.created_at).toLocaleDateString('vi-VN') : 'N/A'}</td>
                </tr>
              `);
            });
          } else {
            console.error('Dữ liệu không phải là mảng hoặc phản hồi không chứa attendance:', response);
          }
        },
        error: function(err) {
          console.error('Lỗi khi gọi API:', err);
        }
      });      });
    </script>

<style>
  /* Style cho modal */
  #modalnotification {
    display: none;
    position: fixed;
    z-index: 4;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: #fff;
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
    width: 400px;
    margin-top: 37px;
  }
  #staffList {
    max-height: 300px;
    overflow-y: auto;
    border: 1px solid #ddd;
    padding: 10px;
    margin-bottom: 10px;
    color: black;
  }
</style>
<!-- Modal hiển thị danh sách nhân viên -->
<div id="modalnotification">
  <h3 style="color: black; text-align: center;">Gửi thông báo cho nhân viên</h3>
    <!-- Input nhập tiêu đề -->
    <label for="notificationTitle">Tiêu đề</label>
    <input id="notificationTitle" type="text" placeholder="Nhập tiêu đề thông báo" style="width: 100%; padding: 5px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;">
    
    <!-- Input nhập nội dung -->
    <label for="notificationBody">Nội dung</label>
    <textarea id="notificationBody" placeholder="Nhập nội dung thông báo" style="width: 100%; padding: 5px; margin-bottom: 10px; border: 1px solid #ddd; border-radius: 4px;"></textarea>
  <button id="selectAllBtn" style="background: #007bff; color: white; padding: 5px 10px; border: none; border-radius: 4px;">Chọn tất cả</button>
  <div id="staffList">
    <!-- Danh sách checkbox nhân viên sẽ được chèn từ JavaScript -->
  </div>
  <button id="confirmnotificationButton" style="background: #28a745; color: white; padding: 10px 15px; border: none; border-radius: 4px;">Xác nhận</button>
  <button onclick="closenotificationButton()" style="background: #dc3545; color: white; padding: 10px 15px; border: none; border-radius: 4px;">Hủy</button>
</div>


<main class="container-fluid page-body-wrapper" style="margin-top: 4%;display: none;" id="notificationboardss">
      <div class="content-wrapper">
        <div id="content" style="margin-top: 2%;">

            <!-- Begin Page Content -->
            <div class="container-fluid">

                <!-- Page Heading -->
                <div>
                  <h1 class="h3 mb-2 text-gray-800">Quản lí các thông báo</h1>
                  <button id="openFormBtn" class="badge badge-info">Gửi thông báo</button>
                </div>

                  </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                                <thead>
                                    <tr>
                                        <th>Mã thông báo</th>
                                        <th>Tiêu đề</th>
                                        <th>Nội dung</th>
                                        <th>Mã nhân viên</th>
                                        <th>Tên nhân viên</th>
                                        <th>Thời gian tạo</th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>Mã thông báo</th>
                                        <th>Tiêu đề</th>
                                        <th>Nội dung</th>
                                        <th>Mã nhân viên</th>
                                        <th>Tên nhân viên</th>
                                        <th>Thời gian tạo</th>
                                    </tr>
                                </tfoot>
                                <tbody>
                                    <!-- Dữ liệu sẽ được chèn vào đây từ Ajax -->
                                </tbody>
                            </table>
                        </div>
                    </div>
        </div>
      </div>
      <!-- content-wrapper ends -->
</main>

  <script>
  // Lấy các phần tử DOM
  const openFormBtn = document.getElementById('openFormBtn');
  const modalnotification = document.getElementById('modalnotification');
  const staffList = document.getElementById('staffList');
  const selectAllBtn = document.getElementById('selectAllBtn');
  const confirmnotificationButton = document.getElementById('confirmnotificationButton');

  // Mở modal và tải danh sách nhân viên
  openFormBtn.addEventListener('click', () => {
  $.ajax({
    url: '/api/attendance/getstaffforadmin',
    method: 'POST',
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}` // Đảm bảo biến `token` tồn tại
    },
    success: function(response) {
      const staff = response.staff || []; // Đảm bảo nhận đúng danh sách nhân viên
      if (staff.length === 0) {
        alert('Không có nhân viên nào để hiển thị.');
        return;
      }

      let staffHTML = ''; // Tạo chuỗi HTML tạm
      staff.forEach(staff => {
          staffHTML += `
            <label>
              <input type="checkbox" class="staff-checkbox" value="${staff.id_staff}"> ${staff.name}
            </label><br>`;
      });

      staffList.innerHTML = staffHTML; // Gán một lần
      modalnotification.style.display = 'block'; // Hiển thị modal
    },
    error: function(err) {
      console.error('Lỗi khi tải danh sách nhân viên:', err);
      alert('Không thể tải danh sách nhân viên. Vui lòng thử lại.');
    }
  });
});

// Chức năng chọn tất cả
selectAllBtn.addEventListener('click', () => {
  const checkboxes = staffList.querySelectorAll('input[type="checkbox"]');
  const isAllChecked = Array.from(checkboxes).every(checkbox => checkbox.checked);
  checkboxes.forEach(checkbox => checkbox.checked = !isAllChecked);
});

  // Xác nhận gửi thông báo
  confirmnotificationButton.addEventListener('click', () => {
  const selectedStaff = Array.from(staffList.querySelectorAll('input[type="checkbox"]:checked'))
    .map(checkbox => checkbox.value);

  // Lấy giá trị từ các input title và body
  const title = document.getElementById('notificationTitle').value.trim();
  const body = document.getElementById('notificationBody').value.trim();

  const confirmPopup = document.getElementById("confirmPopup");
  confirmPopup.style.display = "flex";
  const confirmMessage = document.getElementById("titlepopupconfirm");
  confirmMessage.innerText = `Bạn chắc chắn muốn gửi thông báo đến các nhân viên ${selectedStaff} không?`;

  const confirmYesButton = document.getElementById("confirmYes");
  confirmYesButton.onclick = function () {
    closePopup("confirmPopup");
  // Gọi API với danh sách nhân viên được chọn, tiêu đề và nội dung
  $.ajax({
    url: '/api/attendance/sendnotificationfromcms',
    method: 'POST',
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${token}`
    },
    data: JSON.stringify({
      staff_id: selectedStaff,
      title: title, // Gửi tiêu đề
      body: body    // Gửi nội dung
    }),
    success: function() {
      console.log('Dữ liệu gửi đến API:', {
  staff_id: selectedStaff,
  title: title,
  body: body
});
showResultPopup("Thành công", "Gửi thông báo thành công!");
modalnotification.style.display = 'none'; // Đóng modal
    },
    error: function(err) {
      console.error('Lỗi khi gửi thông báo:', err);
      showResultPopup("Thông báo", "Gửi thông báo thất bại hãy kiểm tra lại!");
    }
  });
}
});

  // Đóng modal
  function closenotificationButton() {
    modalnotification.style.display = 'none';
  }
</script>
<script src="vendor/jquery.min.js"></script>

<script src="vendor/jquery.easing.min.js"></script>

<script src="js/sb-admin-2.min.js"></script>

<script src="vendor/jquery.dataTables.min.js"></script>
<script src="vendor/dataTables.bootstrap4.min.js"></script>
<script src="js/navigation.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/css/bootstrap-datepicker.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/js/bootstrap-datepicker.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/locales/bootstrap-datepicker.vi.min.js"></script>
