<script>
    async function callProtectedAPI() {
      const token = localStorage.getItem("token"); // Lấy token từ localStorage
    
      if (!token) {
        document.getElementById("roleboardss").style.display = "none"; 
        window.location.href = "/"; // Chuyển hướng về trang login
        return;
      }
    
      try {
        const response = await fetch("/api/admin/protectedRoute", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${token}` // Gửi token trong Authorization header
          }
        });
    
        // Nếu API trả về 200 (OK), nghĩa là người dùng có quyền truy cập
        if (response.ok) {
          const result = await response.json();
          document.getElementById("roleboardss").style.display = "block"; 

        } else if (response.status === 403) {
          alert("You do not have permission to access this page.");
          localStorage.removeItem("token"); // Xóa token
          window.location.href = "/"; // Chuyển hướng về trang login
        } else {
          const result = await response.json();
          console.error(result.message);  
          window.location.href = "/"; // Chuyển hướng về trang login
          alert("An unexpected error occurred.");
        }
      } catch (error) {
        console.error("Error while accessing protected route:", error);
        alert("An error occurred. Please try again later.");
      }
    }
    
    // Chỉ tải nội dung sau khi đã xác nhận quyền truy cập
    document.addEventListener("DOMContentLoaded", callProtectedAPI);
      </script> 
    <style>
#roleForm {
  display: none;
  position: fixed;
  top: 55%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 400px; /* Chiều rộng của form */
  padding: 15px;
  background-color: #ffffff;
  border: 1px solid #ddd;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  border-radius: 8px;
  overflow: hidden;
}

#roleForm h3 {
  margin-top: 0;
  text-align: center;
  font-size: 20px;
  color: #333;
}

#roleForm label {
  display: block;
  margin: 5px 0; /* Thu hẹp khoảng cách giữa các label */
  font-weight: bold;
  color: #555;
}

#roleForm input {
  width: 100%;
  padding: 8px;
  margin-bottom: 10px;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 14px;
  outline: none;
}

#roleForm input:focus {
  border-color: #4CAF50;
  box-shadow: 0 0 5px rgba(76, 175, 80, 0.3);
}

#permissions {
  display: flex;
  flex-wrap: wrap; /* Cho phép các ô checkbox nằm ngang */
  gap: 10px; /* Khoảng cách giữa các ô checkbox */
  margin-bottom: 10px; /* Khoảng cách dưới phần checkbox */
}

#permissions label {
  display: flex;
  align-items: center;
  gap: 5px; /* Khoảng cách giữa ô checkbox và nhãn */
  margin: 1px auto;
}

#roleForm button {
  width: 100%;
  height: 50px;
  padding: 8px;
  margin: 4px 1%;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 14px;
  font-weight: bold;
}

#roleForm button:first-child {
  background-color: #4CAF50;
  color: white;
}

#roleForm button:first-child:hover {
  background-color: #45a049;
}

#roleForm button:last-child {
  background-color: #f44336;
  color: white;
}

#roleForm button:last-child:hover {
  background-color: #e41f1f;
}

  </style>
<script>
const token = localStorage.getItem("token");
let isEditMode = false;
let currentRoleId = null;
const permissions = [
  "attendance_select", "staff_select", "staff_update",
  "resume_select", "resume_update", "log_select", 
  "setting_select", "setting_update", "cms_dashboard", 
  "role_select", "role_update", "notification_select"
];

// Load bảng role khi trang được tải
$(document).ready(function () {
  loadRoles();
});

function loadRoles() {
  $.ajax({
    url: "/api/attendance/listroleforadmin",
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    success: function (response) {
      const data = response.role || [];
      $("#roleTable tbody").empty();
      data.forEach((role) => {
        const roleData = JSON.stringify(role);
        $("#roleTable tbody").append(`
          <tr>
            <td>${role.role_id}</td>
            <td>${role.name_role}</td>
            <td>
              <button class="btn btn-success" 
                      data-role-id="${role.role_id}" 
                      data-role-name="${encodeURIComponent(role.name_role)}"
                      data-role="${encodeURIComponent(roleData)}"
                      onclick="openRoleFormFromButton(this)">Chỉnh sửa</button>
              <button class="btn btn-danger" onclick="deleteRole(${role.role_id})">Xóa</button>
            </td>
          </tr>
        `);
      });
    },
    error: function (err) {
      console.error("Lỗi khi tải danh sách quyền:", err);
    },
  });
}
// Hàm mở form từ button
function openRoleFormFromButton(button) {
  const roleId = $(button).data('role-id');
  const roleName = decodeURIComponent($(button).data('role-name'));
  const roleData = JSON.parse(decodeURIComponent($(button).data('role')));

  openRoleForm(roleId, roleName, roleData);
}


// Hàm mở form tạo/chỉnh sửa quyền
function openRoleForm(roleId = null, roleName = "", roleData = {}) {

  isEditMode = !!roleId;
  currentRoleId = roleId;

  $("#formTitle").text(isEditMode ? "Chỉnh sửa quyền" : "Tạo mới quyền");
  $("#roleId").val(roleId || "");
  $("#roleName").val(roleName || "");

  $("#permissions").empty();
  permissions.forEach((perm) => {
    $("#permissions").append(`
      <label>
        <input type="checkbox" id="${perm}" ${roleData[perm] ? "checked" : ""}>
        ${perm}
      </label>
    `);
  });

  $("#overlay").show();
  $("#roleForm").show();
}

// Hàm đóng form
function closeRoleForm() {
  $("#roleForm").hide();
  $("#overlay").hide();
  currentRoleId = null;
  isEditMode = false;
}

function submitRole() {
  const name_role = $("#roleName").val();
  const rolePermissions = {};
  permissions.forEach((perm) => {
    rolePermissions[perm] = $(`#${perm}`).is(":checked");
  });

  if (!name_role) {
    showResultPopup("Lỗi", "Vui lòng nhập tên quyền.");
    return;
  }

  const apiEndpoint = isEditMode ? "/api/attendance/updateroleforadmin" : "/api/attendance/addroleforadmin";
  const data = { role_id: currentRoleId, name_role, ...rolePermissions };

  // Hiển thị loading
  showLoading();

  $.ajax({
    url: apiEndpoint,
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
    data: JSON.stringify(data),
    success: function (response) {
      closeRoleForm();
      showResultPopup("Thành công", isEditMode ? "Cập nhật quyền thành công." : "Thêm quyền thành công.", function () {
        closeRoleForm();
        loadRoles();
      });
    },
    error: function (err) {
      closeRoleForm();
      console.error("Lỗi khi gửi yêu cầu:", err);
      showResultPopup("Lỗi", "Đã xảy ra lỗi khi thực hiện thao tác.");
    },
    complete: function () {
      // Tắt loading
      hideLoading();
    },
  });
}

// Hàm hiển thị loading
function showLoading() {
  $("#loading").show(); // Giả sử bạn có một phần tử #loading để hiển thị loading
}

// Hàm ẩn loading
function hideLoading() {
  $("#loading").hide();
}


function deleteRole(roleId) {
  const confirmPopup = document.getElementById("confirmPopup");
  confirmPopup.style.display = "flex";
  const confirmPopups = document.getElementById("titlepopupconfirm");
  confirmPopups.innerText = "Bạn có chắc chắn muốn xóa quyền này không?";

  const confirmYesButton = document.getElementById("confirmYes");
  confirmYesButton.onclick = function () {
    closePopup("confirmPopup");

    // Thực hiện xóa quyền
    $.ajax({
      url: "/api/attendance/deleteroleforadmin",
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${token}`,
      },
      data: JSON.stringify({ roleId }),
      success: function (response) {
        showResultPopup("Thành công", "Xóa quyền thành công.", function () {
          loadRoles();
        });
      },
      error: function (err) {
        console.error("Lỗi khi xóa quyền:", err);
        showResultPopup("Lỗi", "Xóa quyền thất bại.");
      },
    });
  };
};
    </script>

<main class="container-fluid page-body-wrapper" style="margin-top: 4%; display: none;" id="roleboardss">
  <div id="loading" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 9999;">
    <img src="https://media4.giphy.com/media/v1.Y2lkPTc5MGI3NjExaHJkOWprdzFuNmdkc3gwMjZ3M3ExaTlkYTVmemo0N3l3cWcwNWN2MCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/3oEjI6SIIHBdRxXI40/giphy.webp" alt="Loading..." />
  </div>
  
    <div class="content-wrapper">
      <div id="content" style="margin-top: 2%;">
        <div class="container-fluid">
          <div id="overlay" onclick="closeRoleForm()"></div>
  
          <div id="roleForm">
            <h3 id="formTitle">Nhập thông tin quyền</h3>
            <label for="roleId">Mã quyền:</label>
            <input type="text" id="roleId" readonly><br>
            <label for="roleName">Tên quyền:</label>
            <input type="text" id="roleName"><br>
            <div id="permissions">
              <!-- Các checkbox sẽ được render ở đây -->
            </div>
            <button class="badge badge-success" onclick="submitRole()">Xác nhận</button>
            <button class="badge badge-danger" onclick="closeRoleForm()">Hủy</button>
          </div>
  
          <h1 class="h3 mb-2 text-gray-800">Quản lí phân quyền</h1>
  
          <div class="card shadow mb-4">
            <div class="card-header py-3">
              <button class="badge badge-info" onclick="openRoleForm()">Tạo mới</button>
            </div>
            <div class="card-body">
              <div class="table-responsive">
                <table class="table table-bordered" id="roleTable" width="100%" cellspacing="0">
                  <thead>
                    <tr>
                      <th>Mã quyền</th>
                      <th>Tên quyền</th>
                      <th>Chức năng</th>
                    </tr>
                  </thead>
                  <tfoot>
                    <tr>
                      <th>Mã quyền</th>
                      <th>Tên quyền</th>
                      <th>Chức năng</th>
                    </tr>
                  </tfoot>
                  <tbody>
                    <!-- Dữ liệu sẽ được chèn vào đây từ Ajax -->
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
  
  

<script src="vendor/jquery.min.js"></script>

<script src="vendor/jquery.easing.min.js"></script>

<script src="js/sb-admin-2.min.js"></script>

<script src="vendor/jquery.dataTables.min.js"></script>
<script src="vendor/dataTables.bootstrap4.min.js"></script>
<script src="js/navigation.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/css/bootstrap-datepicker.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/js/bootstrap-datepicker.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap-datepicker@1.9.0/dist/locales/bootstrap-datepicker.vi.min.js"></script>